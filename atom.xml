<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>萱仔的学习小屋</title>
  
  <subtitle>学习学习学习哦耶</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-09-03T09:28:46.184Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>xuanzaismart</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>anaconda环境配置，以及python常用库下载语句（包含镜像）</title>
    <link href="http://example.com/2024/09/02/anaconda%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%EF%BC%8C%E4%BB%A5%E5%8F%8Apython%E5%B8%B8%E7%94%A8%E5%BA%93%E4%B8%8B%E8%BD%BD%E8%AF%AD%E5%8F%A5%EF%BC%88%E5%8C%85%E5%90%AB%E9%95%9C%E5%83%8F%EF%BC%89/"/>
    <id>http://example.com/2024/09/02/anaconda%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%EF%BC%8C%E4%BB%A5%E5%8F%8Apython%E5%B8%B8%E7%94%A8%E5%BA%93%E4%B8%8B%E8%BD%BD%E8%AF%AD%E5%8F%A5%EF%BC%88%E5%8C%85%E5%90%AB%E9%95%9C%E5%83%8F%EF%BC%89/</id>
    <published>2024-09-02T12:00:00.000Z</published>
    <updated>2024-09-03T09:28:46.184Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Anaconda 是一个非常流行的 Python 和 R 语言的集成开发环境，特别适合数据科学、机器学习和人工智能领域的开发工作。本文将介绍一些在 Anaconda 环境中常用的 Python 库，并详细说明这些库的安装与引入方法。</p><span id="more"></span><h2 id="1-常用-Python-库介绍"><a href="#1-常用-Python-库介绍" class="headerlink" title="1. 常用 Python 库介绍"></a>1. 常用 Python 库介绍</h2><p>在使用 Anaconda 时，有一些 Python 库非常常用，几乎每个数据科学家、机器学习工程师都会用到。以下是一些常用库的简单介绍：</p><h3 id="1-1-NumPy"><a href="#1-1-NumPy" class="headerlink" title="1.1 NumPy"></a>1.1 NumPy</h3><p><strong>NumPy</strong> 是一个强大的数学库，提供了多维数组对象以及用于操作数组的函数。它是许多数据科学和机器学习库（如 pandas 和 scikit-learn）的基础。</p><h4 id="示例NumPy-数组相关操作"><a href="#示例NumPy-数组相关操作" class="headerlink" title="示例NumPy 数组相关操作"></a>示例NumPy 数组相关操作</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一维数组</span></span><br><span class="line">array_1d = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;一维数组:&quot;</span>, array_1d)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建二维数组</span></span><br><span class="line">array_2d = np.array([[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>]])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;二维数组:\n&quot;</span>, array_2d)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数组相加</span></span><br><span class="line">array_sum = array_1d + array_1d</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;数组相加:&quot;</span>, array_sum)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数组的广播机制</span></span><br><span class="line">array_broadcast = array_1d * <span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;数组广播:&quot;</span>, array_broadcast)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取数组的第二个元素</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;第二个元素:&quot;</span>, array_1d[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取二维数组的第一列</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;第一列:&quot;</span>, array_2d[:, <span class="number">0</span>])</span><br><span class="line"><span class="comment"># 生成全零数组</span></span><br><span class="line"></span><br><span class="line">zeros_array = np.zeros((<span class="number">3</span>, <span class="number">3</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;全零数组:\n&quot;</span>, zeros_array)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成单位矩阵</span></span><br><span class="line">identity_matrix = np.eye(<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;单位矩阵:\n&quot;</span>, identity_matrix)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-2-Pandas"><a href="#1-2-Pandas" class="headerlink" title="1.2 Pandas"></a>1.2 Pandas</h3><p><strong>Pandas</strong> 是一个数据分析库，提供了易于使用的数据结构和数据分析工具。Pandas 主要用于操作和分析结构化数据（如表格数据）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建字典</span></span><br><span class="line">data = &#123;<span class="string">&#x27;Name&#x27;</span>: [<span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;Jerry&#x27;</span>, <span class="string">&#x27;Spike&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;Age&#x27;</span>: [<span class="number">20</span>, <span class="number">21</span>, <span class="number">19</span>],</span><br><span class="line">        <span class="string">&#x27;Grade&#x27;</span>: [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;A&#x27;</span>]&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从字典创建 DataFrame</span></span><br><span class="line">df = pd.DataFrame(data)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;DataFrame:\n&quot;</span>, df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 筛选年龄大于20的行</span></span><br><span class="line">filtered_df = df[df[<span class="string">&#x27;Age&#x27;</span>] &gt; <span class="number">20</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;筛选结果:\n&quot;</span>, filtered_df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加新列</span></span><br><span class="line">df[<span class="string">&#x27;Passed&#x27;</span>] = df[<span class="string">&#x27;Grade&#x27;</span>] == <span class="string">&#x27;A&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;添加新列后的 DataFrame:\n&quot;</span>, df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按照 Grade 分组并统计各组的平均年龄</span></span><br><span class="line">grouped_df = df.groupby(<span class="string">&#x27;Grade&#x27;</span>)[<span class="string">&#x27;Age&#x27;</span>].mean()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;按 Grade 分组后的平均年龄:\n&quot;</span>, grouped_df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建包含缺失值的 DataFrame</span></span><br><span class="line">data_with_nan = &#123;<span class="string">&#x27;Name&#x27;</span>: [<span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;Jerry&#x27;</span>, <span class="literal">None</span>],</span><br><span class="line">                 <span class="string">&#x27;Age&#x27;</span>: [<span class="number">20</span>, <span class="literal">None</span>, <span class="number">19</span>]&#125;</span><br><span class="line">df_with_nan = pd.DataFrame(data_with_nan)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 填充缺失值</span></span><br><span class="line">df_filled = df_with_nan.fillna(<span class="string">&#x27;Unknown&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;填充缺失值后的 DataFrame:\n&quot;</span>, df_filled)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-3-Matplotlib"><a href="#1-3-Matplotlib" class="headerlink" title="1.3 Matplotlib"></a>1.3 Matplotlib</h3><p><strong>Matplotlib</strong> 是一个用于创建静态、动态和交互式可视化图表的绘图库。它与 NumPy 配合良好，可用于生成各种类型的图表，如折线图、柱状图、散点图等。<br>自用库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">import matplotlib.pyplot as plt</span><br><span class="line"></span><br><span class="line"># 数据</span><br><span class="line">x = [1, 2, 3, 4, 5]</span><br><span class="line">y = [1, 4, 9, 16, 25]</span><br><span class="line"></span><br><span class="line"># 绘制折线图</span><br><span class="line">plt.plot(x, y, marker=&#x27;o&#x27;)</span><br><span class="line">plt.title(&#x27;折线图示例&#x27;)</span><br><span class="line">plt.xlabel(&#x27;X 轴&#x27;)</span><br><span class="line">plt.ylabel(&#x27;Y 轴&#x27;)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"># 数据</span><br><span class="line">categories = [&#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;]</span><br><span class="line">values = [5, 7, 3]</span><br><span class="line"></span><br><span class="line"># 绘制柱状图</span><br><span class="line">plt.bar(categories, values, color=&#x27;green&#x27;)</span><br><span class="line">plt.title(&#x27;柱状图示例&#x27;)</span><br><span class="line">plt.xlabel(&#x27;类别&#x27;)</span><br><span class="line">plt.ylabel(&#x27;值&#x27;)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"># 数据</span><br><span class="line">x = [1, 2, 3, 4, 5]</span><br><span class="line">y = [2, 3, 5, 7, 11]</span><br><span class="line"></span><br><span class="line"># 绘制散点图</span><br><span class="line">plt.scatter(x, y, color=&#x27;red&#x27;)</span><br><span class="line">plt.title(&#x27;散点图示例&#x27;)</span><br><span class="line">plt.xlabel(&#x27;X 轴&#x27;)</span><br><span class="line">plt.ylabel(&#x27;Y 轴&#x27;)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"># 数据</span><br><span class="line">data = [1, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5, 5, 6, 7]</span><br><span class="line"></span><br><span class="line"># 绘制直方图</span><br><span class="line">plt.hist(data, bins=7, color=&#x27;blue&#x27;, edgecolor=&#x27;black&#x27;)</span><br><span class="line">plt.title(&#x27;直方图示例&#x27;)</span><br><span class="line">plt.xlabel(&#x27;值&#x27;)</span><br><span class="line">plt.ylabel(&#x27;频率&#x27;)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"># 数据</span><br><span class="line">x = [1, 2, 3, 4, 5]</span><br><span class="line">y1 = [1, 4, 9, 16, 25]</span><br><span class="line">y2 = [2, 3, 5, 7, 11]</span><br><span class="line"></span><br><span class="line"># 创建两个子图</span><br><span class="line">fig, axs = plt.subplots(2)</span><br><span class="line"></span><br><span class="line"># 第一个子图</span><br><span class="line">axs[0].plot(x, y1, marker=&#x27;o&#x27;)</span><br><span class="line">axs[0].set_title(&#x27;子图 1&#x27;)</span><br><span class="line"></span><br><span class="line"># 第二个子图</span><br><span class="line">axs[1].scatter(x, y2, color=&#x27;red&#x27;)</span><br><span class="line">axs[1].set_title(&#x27;子图 2&#x27;)</span><br><span class="line"></span><br><span class="line"># 调整布局</span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-4-Scikit-learn"><a href="#1-4-Scikit-learn" class="headerlink" title="1.4 Scikit-learn"></a>1.4 Scikit-learn</h3><p><strong>Scikit-learn</strong> 是一个机器学习库，提供了简单而高效的数据挖掘和数据分析工具，支持各种分类、回归、聚类算法。它建立在 NumPy、SciPy 和 Matplotlib 之上。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">from sklearn.datasets import load_iris</span><br><span class="line"></span><br><span class="line"># 加载 Iris 数据集</span><br><span class="line">iris = load_iris()</span><br><span class="line">print(&quot;特征名称:&quot;, iris.feature_names)</span><br><span class="line">print(&quot;标签名称:&quot;, iris.target_names)</span><br><span class="line"></span><br><span class="line">from sklearn.model_selection import train_test_split</span><br><span class="line"></span><br><span class="line"># 数据集划分为训练集和测试集</span><br><span class="line">X_train, X_test, y_train, y_test = train_test_split(iris.data, iris.target, test_size=0.3, random_state=42)</span><br><span class="line">print(&quot;训练集大小:&quot;, X_train.shape)</span><br><span class="line">print(&quot;测试集大小:&quot;, X_test.shape)</span><br><span class="line"></span><br><span class="line">from sklearn.neighbors import KNeighborsClassifier</span><br><span class="line"></span><br><span class="line"># 创建 KNN 分类器并训练</span><br><span class="line">knn = KNeighborsClassifier(n_neighbors=3)</span><br><span class="line">knn.fit(X_train, y_train)</span><br><span class="line"></span><br><span class="line"># 预测</span><br><span class="line">predictions = knn.predict(X_test)</span><br><span class="line">print(&quot;预测结果:&quot;, predictions)</span><br><span class="line"></span><br><span class="line">from sklearn.metrics import accuracy_score</span><br><span class="line"></span><br><span class="line"># 计算模型的准确率</span><br><span class="line">accuracy = accuracy_score(y_test, predictions)</span><br><span class="line">print(&quot;模型准确率:&quot;, accuracy)</span><br><span class="line"></span><br><span class="line">from sklearn.preprocessing import StandardScaler</span><br><span class="line"></span><br><span class="line"># 特征标准化</span><br><span class="line">scaler = StandardScaler()</span><br><span class="line">X</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-5-TensorFlow-PyTorch"><a href="#1-5-TensorFlow-PyTorch" class="headerlink" title="1.5 TensorFlow&#x2F;PyTorch"></a>1.5 TensorFlow&#x2F;PyTorch</h3><p><strong>TensorFlow</strong> 和 <strong>PyTorch</strong> 是两个非常流行的深度学习框架，分别由 Google 和 Facebook 开发。它们都提供了强大的工具和函数，用于构建和训练神经网络模型。</p><h3 id="1-6-Jupyter-Notebook"><a href="#1-6-Jupyter-Notebook" class="headerlink" title="1.6 Jupyter Notebook"></a>1.6 Jupyter Notebook</h3><p><strong>Jupyter Notebook</strong> 是一个交互式的开发环境，特别适合数据分析和机器学习任务。它允许用户将代码、文本、图表和公式组合在一个文档中，非常适合演示和分享工作成果。我在实习的时候常用jupyterlab，比pycharm好用在</p><h2 id="2-常用库列表"><a href="#2-常用库列表" class="headerlink" title="2. 常用库列表"></a>2. 常用库列表</h2><p>以下是常用库的列表，供大家参考：</p><table><thead><tr><th>库名称</th><th>功能描述</th><th>官方文档链接</th></tr></thead><tbody><tr><td>NumPy</td><td>数学计算，支持多维数组</td><td><a href="https://numpy.org/doc/">NumPy 官方文档</a></td></tr><tr><td>Pandas</td><td>数据分析和操作</td><td><a href="https://pandas.pydata.org/docs/">Pandas 官方文档</a></td></tr><tr><td>Matplotlib</td><td>数据可视化</td><td><a href="https://matplotlib.org/stable/contents.html">Matplotlib 官方文档</a></td></tr><tr><td>Scikit-learn</td><td>机器学习算法</td><td><a href="https://scikit-learn.org/stable/documentation.html">Scikit-learn 官方文档</a></td></tr><tr><td>TensorFlow</td><td>深度学习框架</td><td><a href="https://www.tensorflow.org/api_docs">TensorFlow 官方文档</a></td></tr><tr><td>PyTorch</td><td>深度学习框架</td><td><a href="https://pytorch.org/docs/stable/index.html">PyTorch 官方文档</a></td></tr><tr><td>Jupyter Notebook</td><td>交互式计算环境</td><td><a href="https://jupyter.org/documentation">Jupyter 官方文档</a></td></tr></tbody></table><h2 id="3-引入与安装方法"><a href="#3-引入与安装方法" class="headerlink" title="3. 引入与安装方法"></a>3. 引入与安装方法</h2><h3 id="3-1-使用-Conda-安装"><a href="#3-1-使用-Conda-安装" class="headerlink" title="3.1 使用 Conda 安装"></a>3.1 使用 Conda 安装</h3><p>Anaconda 自带了 Conda 包管理工具，使用 Conda 可以方便地安装和管理环境中的库。</p><p>安装库的命令如下：</p><pre><code class="bash">conda install numpy pandas matplotlib scikit-learn tensorflow pytorch jupyter清华镜像：https://pypi.tuna.tsinghua.edu.cn/simple科大镜像：https://pypi.mirrors.ustc.edu.cn/simple豆瓣镜像：http://pypi.douban.com/simple/阿里镜像：https://mirrors.aliyun.com/pypi/simple/百度镜像：https://mirror.baidu.com/pypi/simple#安装pytorch（自用pip3 install torch==2.0.1 torchaudio torchvision==0.15.2 --index-url https://download.pytorch.org/whl/cu118</code></pre>]]></content>
    
    
    <summary type="html">介绍在 Anaconda 环境下常用的 Python 库，以及它们的安装与引入方法。</summary>
    
    
    
    <category term="环境" scheme="http://example.com/categories/%E7%8E%AF%E5%A2%83/"/>
    
    <category term="Python" scheme="http://example.com/categories/%E7%8E%AF%E5%A2%83/Python/"/>
    
    
    <category term="Anaconda" scheme="http://example.com/tags/Anaconda/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="常用库" scheme="http://example.com/tags/%E5%B8%B8%E7%94%A8%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 博客中如何插入多种内容</title>
    <link href="http://example.com/2024/09/02/leecode150-%E8%90%B1%E4%BB%94%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0%E8%AE%B0%E5%BD%951-%E6%95%B0%E7%BB%84/"/>
    <id>http://example.com/2024/09/02/leecode150-%E8%90%B1%E4%BB%94%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0%E8%AE%B0%E5%BD%951-%E6%95%B0%E7%BB%84/</id>
    <published>2024-09-02T06:00:00.000Z</published>
    <updated>2024-09-02T17:25:03.313Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在这篇文章中，我将演示如何在 Hexo 博客中插入各种内容，包括图片、表格、代码块，以及使用不同级别的标题来组织文章结构。</p><span id="more"></span><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><p>在 Hexo 博客中插入图片非常简单。你可以使用本地图片或网络图片。下面是一个本地图片的示例：</p><p><img src="/images/hexo-logo.jpg" alt="Hexo Logo"></p><h2 id="插入表格"><a href="#插入表格" class="headerlink" title="插入表格"></a>插入表格</h2><p>Markdown 还支持创建简单的表格。下面是一个插入表格的示例，表格可以用来展示数据或进行比较。</p><table><thead><tr><th>功能</th><th>描述</th><th>支持情况</th></tr></thead><tbody><tr><td>插入图片</td><td>可以插入本地或网络图片</td><td>支持</td></tr><tr><td>插入表格</td><td>可以用 Markdown 创建简单表格</td><td>支持</td></tr><tr><td>插入代码块</td><td>支持多种编程语言的语法高亮</td><td>支持</td></tr></tbody></table><h2 id="插入代码块"><a href="#插入代码块" class="headerlink" title="插入代码块"></a>插入代码块</h2><p>Hexo 支持使用 Markdown 插入代码块，并且可以对多种编程语言进行语法高亮。下面是一个插入 Python 代码块的示例：</p><h3 id="示例代码块（Python）"><a href="#示例代码块（Python）" class="headerlink" title="示例代码块（Python）"></a>示例代码块（Python）</h3><pre><code class="python">def hello_world():    print(&quot;Hello, World!&quot;)hello_world()</code></pre>]]></content>
    
    
    <summary type="html">这篇文章展示了如何在 Hexo 博客中插入图片、表格、代码块、正文内容以及三级标题。</summary>
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
    <category term="教程" scheme="http://example.com/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2024/09/01/hello-world/"/>
    <id>http://example.com/2024/09/01/hello-world/</id>
    <published>2024-08-31T17:09:31.473Z</published>
    <updated>2024-08-31T17:09:31.473Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
